

-----------------------------------------------------------
:doc:`Commands <index>` model:collaborative_filtering/score
-----------------------------------------------------------

Collaborative Filtering Predict (ALS).

POST /v1/commands/
==================

GET /v1/commands/:id
====================

Request
-------

**Route** ::

  POST /v1/commands/

**Body**



:name:

    model:collaborative_filtering/score

:arguments:


    **model** : Model

    ..

        <Missing Description>



    **user_id** : int32

    ..

        A user id from the first column of the input frame



    **item_id** : int32

    ..

        An item id from the first column of the input frame



|

**Headers** ::

  Authorization: test_api_key_1
  Content-type: application/json
|

**Description**

See :ref:`Collaborative Filtering Train
<python_api/models/model-collaborative_filtering/train>` for more information.

|

Response
--------

**Status** ::

  200 OK

**Body**

Returns information about the command.  See the Response Body for Get Command here below.  It is the same.


GET /v1/commands/:id
====================

Request
-------

**Route** ::

  GET /v1/commands/18

**Body**

(None)

**Headers** ::

  Authorization: test_api_key_1
  Content-type: application/json
|

Response
--------

**Status** ::

  200 OK

**Body**


``float64``

        Returns a double representing the probability if the user(i) to like product (j)


