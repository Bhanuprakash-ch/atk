
:doc:`CoxProportionalHazardModel <index>`  __init__
***************************************************

------


.. function:: __init__(self, name=None)

    Creates a 'new' instance of Cox proportional hazard model.


    :Parameters:

        **name** : unicode (default=None)

        ..

            User supplied name.




    :Returns:

        : Model

        ..




    Examples
    --------
    Consider the following model trained and tested on the sample data set in *frame* 'frame'.

    >>> frame.inspect()
    [#]  time_column  covariate_column
    ==================================
    [0]       2201.0              28.3
    [1]        374.0              22.7
    [2]       1002.0              35.7
    [3]       1205.0              30.7
    [4]       2065.0              26.5
    [5]          6.0              31.4
    [6]         98.0              21.5
    [7]        189.0              27.1
    [8]       2421.0              27.9


    >>> train_output = model.train(frame, "time_column", "covariate_column", 0.001, beta=0.03)
    [===Job Progress===]
    >>> train_output['beta']
    0.029976090327051643
    >>> train_output['error']
    2.3909672948355803e-05

    >>> frame.inspect()
    [#]  time_column  covariate_column  censored_column
    ===================================================
    [0]       2201.0              28.3                1
    [1]        374.0              22.7                1
    [2]       1002.0              35.7                1
    [3]       1205.0              30.7                1
    [4]       2065.0              26.5                1
    [5]          6.0              31.4                1
    [6]         98.0              21.5                1
    [7]        189.0              27.1                1
    [8]       2421.0              27.9                1



    >>> train_output = model.train(frame, "time_column", "covariate_column", 0.001, "censored_column", beta=0.03)
    [===Job Progress===]
    >>> train_output['beta']
    0.029976090327051643
    >>> train_output['error']
    2.3909672948355803e-05

    >>> frame.inspect()
    [#]  time_column  covariate_column  censored_column
    ===================================================
    [0]       2201.0              28.3                1
    [1]        374.0              22.7                1
    [2]       1002.0              35.7                1
    [3]       1205.0              30.7                1
    [4]       2065.0              26.5                0
    [5]          6.0              31.4                0
    [6]         98.0              21.5                0
    [7]        189.0              27.1                0
    [8]       2421.0              27.9                0





    >>> train_output = model.train(frame, "time_column", "covariate_column", 0.001, "censored_column", beta=0.03)
    [===Job Progress===]
    >>> train_output['beta']
    0.029978135698772283
    >>> train_output['error']
    2.1864301227716293e-05
