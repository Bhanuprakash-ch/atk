.. _rest_api/v1/commands/model-random_forest_classifier__test:



-----------------------------------------------------------
:doc:`Commands <index>` model:random_forest_classifier/test
-----------------------------------------------------------

|ALPHA|
Predict test frame labels and return metrics.

POST /v1/commands/
==================

GET /v1/commands/:id
====================

Request
-------

**Route** ::

  POST /v1/commands/

**Body**



:name:

    model:random_forest_classifier/test

:arguments:


    **model** : <bound method AtkEntityType.__name__ of <trustedanalytics.rest.jsonschema.AtkEntityType object at 0x7fea263dd150>>

    ..

        Handle of the model to be used



    **frame** : <bound method AtkEntityType.__name__ of <trustedanalytics.rest.jsonschema.AtkEntityType object at 0x7fea263dd0d0>>

    ..

        The frame whose labels are to be predicted



    **label_column** : unicode

    ..

        Column containing the true labels of the observations



    **observation_columns** : list (default=None)

    ..

        Column(s) containing the observations whose labels are to be predicted.
        By default, we predict the labels over columns the RandomForest was trained on.



|

**Headers** ::

  Authorization: test_api_key_1
  Content-type: application/json
|

**Description**

Predict the labels for a test frame and run classification metrics on predicted
and target labels.

|

Response
--------

**Status** ::

  200 OK

**Body**

Returns information about the command.  See the Response Body for Get Command here below.  It is the same.


GET /v1/commands/:id
====================

Request
-------

**Route** ::

  GET /v1/commands/18

**Body**

(None)

**Headers** ::

  Authorization: test_api_key_1
  Content-type: application/json
|

Response
--------

**Status** ::

  200 OK

**Body**


``dict``

        object
            An object with classification metrics.
            The data returned is composed of multiple components:
          <object>.accuracy : double
          <object>.confusion_matrix : table
          <object>.f_measure : double
          <object>.precision : double
          <object>.recall : double


