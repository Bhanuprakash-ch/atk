.. _python_api/models/model-random_forest_regressor/train:


:doc:`RandomForestRegressorModel <index>`  train
************************************************

------


.. function:: train(self, frame, label_column, observation_columns, num_trees=1, impurity='variance', max_depth=4, max_bins=100, seed=-544689744, categorical_features_info=None, feature_subset_category=None)

    |ALPHA|
    Build Random Forests Regressor model.


    :Parameters:

        **frame** : <bound method AtkEntityType.__name__ of <trustedanalytics.rest.jsonschema.AtkEntityType object at 0x7f3d406b3090>>

        ..

            A frame to train the model on



        **label_column** : unicode

        ..

            Column name containing the label for each observation



        **observation_columns** : list

        ..

            Column(s) containing the observations



        **num_trees** : int32 (default=1)

        ..

            Number of tress in the random forest



        **impurity** : unicode (default=variance)

        ..

            Criterion used for information gain calculation. Supported values "variance"



        **max_depth** : int32 (default=4)

        ..

            Maxium depth of the tree



        **max_bins** : int32 (default=100)

        ..

            Maximum number of bins used for splitting features



        **seed** : int32 (default=-544689744)

        ..

            Random seed for bootstrapping and choosing feature subsets



        **categorical_features_info** : None (default=None)

        ..





        **feature_subset_category** : unicode (default=None)

        ..

            Number of features to consider for splits at each node. Supported values "auto", "all", "sqrt","log2", "onethird"




    :Returns:

        : dict

        ..


    Creating a Random Forests Regressor Model using the observation columns and label column.
