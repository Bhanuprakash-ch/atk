

--------------------------------------------
:doc:`Commands <index>` frame/export_to_jdbc
--------------------------------------------

Write current frame to JDBC table.

POST /v1/commands/
==================

GET /v1/commands/:id
====================

Request
-------

**Route** ::

  POST /v1/commands/

**Body**



:name:

    frame/export_to_jdbc

:arguments:


    **frame** : Frame

    ..

        Frame to be exported to JDBC



    **table_name** : unicode

    ..

        JDBC table name



    **connector_type** : unicode (default=postgres)

    ..

        (optional) JDBC connector, either mysql or postgres. Default is postgres



|

**Headers** ::

  Authorization: test_api_key_1
  Content-type: application/json
|

**Description**

Table will be created or appended to.
Export of Vectors is not currently supported.

|

Response
--------

**Status** ::

  200 OK

**Body**

Returns information about the command.  See the Response Body for Get Command here below.  It is the same.


GET /v1/commands/:id
====================

Request
-------

**Route** ::

  GET /v1/commands/18

**Body**

(None)

**Headers** ::

  Authorization: test_api_key_1
  Content-type: application/json
|

Response
--------

**Status** ::

  200 OK

**Body**


``_Unit``




