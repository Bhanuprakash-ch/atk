.. _python_api/models/model-random_forest_classifier/index:


:doc:`Models<../index>` RandomForestClassifierModel
***************************************************

------



.. toctree::
    :hidden:

    new
    name
    predict
    publish
    test
    train

.. class:: RandomForestClassifierModel

    Create a 'new' instance of a Random Forest Classifier model.

    Random Forest [1]_ is a supervised ensemble learning algorithm
    which can be used to perform binary and multi-class classification.
    The Random Forest Classifier model is initialized, trained on columns of a
    frame, used to predict the labels of observations in a frame, and tests the
    predicted labels against the true labels.
    This model runs the MLLib implementation of Random Forest [2]_.
    During training, the decision trees are trained in parallel.
    During prediction, each tree's prediction is counted as vote for one class.
    The label is predicted to be the class which receives the most votes.
    During testing, labels of the observations are predicted and tested against the true labels
    using built-in binary and multi-class Classification Metrics.

    .. rubric:: footnotes

    .. [1] https://en.wikipedia.org/wiki/Random_forest
    .. [2] https://spark.apache.org/docs/1.3.0/mllib-ensembles.html
     

    .. rubric:: Attributes

    ====================================================================================================  ====================================================================================================
    :doc:`name <name>`\                                                                                   Set or get the name of the model object.
    ====================================================================================================  ====================================================================================================

    .. rubric:: Methods

    ====================================================================================================  ====================================================================================================
    :ref:`__init__ <RandomForestClassifierModel__init__>`\ (self[, name, _info])                          Create a 'new' instance of a Random Forest Classifier model.
    :doc:`predict <predict>`\ (self, frame[, observation_columns])                                        |ALPHA| Predict the labels for the data points.
    :doc:`publish <publish>`\ (self)                                                                      |BETA| Creates a scoring engine tar file.
    :doc:`test <test>`\ (self, frame, label_column[, observation_columns])                                |ALPHA| Predict test frame labels and return metrics.
    :doc:`train <train>`\ (self, frame, label_column, observation_columns[, num_classes, ...])            |ALPHA| Build Random Forests Classifier model.
    ====================================================================================================  ====================================================================================================

.. _RandomForestClassifierModel__init__:


.. function:: __init__(self, name=None)

    Create a 'new' instance of a Random Forest Classifier model.


    :Parameters:

        **name** : unicode (default=None)

        ..

            User supplied name.




    :Returns:

        : <bound method AtkEntityType.__name__ of <trustedanalytics.rest.jsonschema.AtkEntityType object at 0x7f5df70663d0>>

        ..


    Random Forest [1]_ is a supervised ensemble learning algorithm
    which can be used to perform binary and multi-class classification.
    The Random Forest Classifier model is initialized, trained on columns of a
    frame, used to predict the labels of observations in a frame, and tests the
    predicted labels against the true labels.
    This model runs the MLLib implementation of Random Forest [2]_.
    During training, the decision trees are trained in parallel.
    During prediction, each tree's prediction is counted as vote for one class.
    The label is predicted to be the class which receives the most votes.
    During testing, labels of the observations are predicted and tested against the true labels
    using built-in binary and multi-class Classification Metrics.

    .. rubric:: footnotes

    .. [1] https://en.wikipedia.org/wiki/Random_forest
    .. [2] https://spark.apache.org/docs/1.3.0/mllib-ensembles.html
     
