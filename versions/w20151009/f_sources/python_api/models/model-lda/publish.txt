.. _python_api/models/model-lda/publish:


:doc:`LdaModel <index>`  publish
********************************

------


.. function:: publish(self)

    |BETA|
    Creates a tar file that will used as input to the scoring engine


    :Parameters:



    :Returns:

        : dict

        ..

            Returns the HDFS path to the trained model's tar file
    Creates a tar file with the trained Latent Dirichlet Allocation model. The tar file is then published on HDFS and this method returns the path to the tar file.
                  The tar file is used as input to the scoring engine to predict the conditional topic probabilities for a document.

    Examples
    --------
    Publish a trained Lda Model for scoring

    .. only:: html

        .. code::

            >>> my_model = ta.LdaModel(name='MyLdaModel')
            >>> my_model.train(frame, 'doc_id', 'word_id', 'word_count', max_iterations = 3, num_topics = 2)
            >>> my_model.publish()
            <Path in HDFS to model's tar file>

    .. only:: latex

        .. code::

            >>> my_model = ta.LdaModel(name='MyLdaModel')
            >>> my_model.train(frame, 'doc_id', 'word_id', 'word_count', max_iterations = 3, num_topics = 2)
            >>> my_model.publish()
            <Path in HDFS to model's tar file>
