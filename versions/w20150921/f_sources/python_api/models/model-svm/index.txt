.. _python_api/models/model-svm/index:


:doc:`Models<../index>` SvmModel
********************************

------



.. toctree::
    :hidden:

    new
    name
    predict
    test
    train

.. class:: SvmModel

    Create a 'new' instance of a Support Vector Machine model.

    **Classification using Support Vector Machine**

    Support Vector Machine[1]_ is a supervised algorithm used to perform binary classification. A support vector machine
    constructs a high dimensional hyperplane which is said to achieve a good separation when a hyperplane has the largest distance to
    the nearest training-data point of any class. This model runs the MLLib implementation of SVM[2]_ with SGD[3]_ optimizer.
    The user may initialize a SVMWithSGDModel, train the model on columns of a frame, use the model to predict the labels of observations in a frame and
    test the predicted labels against the true labels. During testing, labels of the observations are predicted and tested against the true labels using
    in-built binary ClassificationMetrics.

    .. [1] https://en.wikipedia.org/wiki/Support_vector_machine
    .. [2] https://spark.apache.org/docs/1.3.0/mllib-linear-methods.html
    .. [3] https://en.wikipedia.org/wiki/Stochastic_gradient_descent


    .. rubric:: Attributes

    ====================================================================================================  ====================================================================================================
    :doc:`name <name>`\                                                                                   Set or get the name of the model object.
    ====================================================================================================  ====================================================================================================

    .. rubric:: Methods

    ====================================================================================================  ====================================================================================================
    :ref:`__init__ <SvmModel__init__>`\ (self[, name, _info])                                             |ALPHA| Create a 'new' instance of a Support Vector Machine model.
    :doc:`predict <predict>`\ (self, frame[, observation_columns])                                        |ALPHA| Make new frame with additional column for predicted label.
    :doc:`test <test>`\ (self, frame, label_column[, observation_columns])                                |ALPHA| Predict test frame labels and return metrics.
    :doc:`train <train>`\ (self, frame, label_column, observation_columns[, intercept, ...])              |ALPHA| Train SVM model based on another frame.
    ====================================================================================================  ====================================================================================================

.. _SvmModel__init__:


.. function:: __init__(self, name=None)

    |ALPHA|
    Create a 'new' instance of a Support Vector Machine model.


    :Parameters:

        **name** : unicode (default=None)

        ..

            User supplied name.




    :Returns:

        : <bound method AtkEntityType.__name__ of <trustedanalytics.rest.jsonschema.AtkEntityType object at 0x7fe61e2b6210>>

        ..


    **Classification using Support Vector Machine**

    Support Vector Machine[1]_ is a supervised algorithm used to perform binary classification. A support vector machine
    constructs a high dimensional hyperplane which is said to achieve a good separation when a hyperplane has the largest distance to
    the nearest training-data point of any class. This model runs the MLLib implementation of SVM[2]_ with SGD[3]_ optimizer.
    The user may initialize a SVMWithSGDModel, train the model on columns of a frame, use the model to predict the labels of observations in a frame and
    test the predicted labels against the true labels. During testing, labels of the observations are predicted and tested against the true labels using
    in-built binary ClassificationMetrics.

    .. [1] https://en.wikipedia.org/wiki/Support_vector_machine
    .. [2] https://spark.apache.org/docs/1.3.0/mllib-linear-methods.html
    .. [3] https://en.wikipedia.org/wiki/Stochastic_gradient_descent
